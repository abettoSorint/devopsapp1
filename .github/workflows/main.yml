name: Android Release

# 1
on:
  # 2
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # 3
  workflow_dispatch:

# 4
jobs:
  test:
    # 6
    runs-on: ubuntu-latest

    # 7
    steps:
      # 8
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.3'
          channel: 'stable'
          cache: true
      - run: flutter --version

      - name: Run Flutter Analyse
        run: flutter analyze

      - name: Run test app
        run: flutter test

      - name: Flutter commit  
        run: echo  ${{ github.workspace }} 

      - name: Flutter commit  to setup file
        run: |
          echo 'mon test di commit bene'
          #take the commit
          myCommit='${{ github.event.head_commit.message }}'
          echo $myCommit
          
          #parametter commit input
          commitGit=$myCommit
          
          #beforVersion v[0-9].[0-9].[0-9]
          Major=1
          Minor=3
          currentM=2
          
          beforeVersion='v'${Major^^}'.'${Minor^^}'.'${currentM^^}
          
          #echo "Major=$Major" >> $GITHUB_ENV
          #echo "Minor=$Minor" >> $GITHUB_ENV
          #echo "currentM=$currentM" >> $GITHUB_ENV
          
          
          committags=(build/,ci/,feat/,fix/,chore/,refactor/,revert/,style/,minorRelease/,majorRelease/)
          if echo "${committags[@]}" | grep -qw "$commitGit"; then
            echo "Found $commitGit!"
          else
            echo "$commitGit not found."
          fi
          
          echo "salut " $beforeVersion
          echo ${committags[*]}

      - name: debug app
        run: flutter build apk --debug --split-per-abi
      - name: Push APK to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/debug/*.apk"
          tag: v1.0.5
          token: ${{ secrets.Token }}

  # 5
  build:
    # 6
    runs-on: ubuntu-latest

    # 7
    steps:
      # 8
      - uses: actions/checkout@v3

      - name: Run a one-line script
        run: echo "salut Arthur!"
