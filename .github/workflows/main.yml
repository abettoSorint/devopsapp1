name: Android Release

# 1
on:
  # 2
  push:
    branches: [ "master", "Pre-Pro" ,Pro]
  pull_request:
    branches: [ "master", "Pre-Pro" ,Pro ]
        


  # 3
  workflow_dispatch:
env:
  LAST_MAJOR: 1    
  LAST_MINOR: 2
  LAST_CURRENTM: 3
  LAST_COMMIT: 4
# 4
jobs:
  test:
    # 6
    runs-on: ubuntu-latest

    # 7
    steps:
      # 8
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.3'
          channel: 'stable'
          cache: true
      - run: flutter --version

      - name: Run Flutter Analyse
        run: flutter analyze

      - name: Run test app
        run: flutter test

      - name: Flutter commit  
        run: echo  '${{ github.workspace }}'

      - name: Flutter branch to action  
        run: echo branch  '${{  github.ref_name}}'

      - name: Inizialyze variable CI/CD
        run: |
          filename="${{github.workspace}}/.github/workflows/VersionApp.txt"
          n=1
          while read line; do
          echo "Line No. $n : $line"
          if echo "$line" | grep -qw "Minor"; then
            echo "LAST_MINOR=${line%%:*}" >> $GITHUB_ENV
          elif echo "$line" | grep -qw "Major"; then
            echo "LAST_MAJOR=${line%%:*}" >> $GITHUB_ENV
          elif echo "$line" | grep -qw "CurrentModify"; then
            echo "LAST_CURRENTM=${line%%:*}" >> $GITHUB_ENV
          elif echo "$line" | grep -qw "LastComit"; then
            echo "LAST_COMMIT=${line%%:*}" >> $GITHUB_ENV
          else
            echo "THIS FILE IS NOT UPDATING"
          fi
          n=$((n+1))
          done < $filename        

      - name: Flutter commit  to setup file
        env:
          MAJOR: ${{vars.ISPRE}}
          MINOR: ${{vars.MINOR}}
        run: |
          echo 'mon test di commit bene'
          #take the commit
          myCommit='${{ github.event.head_commit.message }}'
          echo $myCommit

          #parametter commit input
          commitGit=${myCommit%%/*}
          
          #beforVersion v[0-9].[0-9].[0-9]
          Major='${{env.MAJOR}}'
          Minor='${{env.MINOR}}'
          currentM='${{env.CURRENTM}}'
          
          echo "LAST_MAJOR :${{env.LAST_MAJOR}} ,LAST_MINOR :${{vars.LAST_MINOR}} ,LAST_COMMIT :${{vars.LAST_COMMIT}}"
          
          #echo "Major=$Major" >> $GITHUB_ENV
          #echo "Minor=$Minor" >> $GITHUB_ENV
          #echo "currentM=$currentM" >> $GITHUB_ENV       
          
          
          committags=(build/,ci/,feat/,fix/,chore/,refactor/,revert/,style/,minorRelease/,majorRelease/)
          if echo "${committags[@]}" | grep -qw "$commitGit"; then
            echo "Found $commitGit!"
            if [ '${{  github.ref_name}}' = "Pro" ] || [ '${{  github.ref_name}}' = "Pre-Pro" ]; then
              echo "yes!"
            else
              echo "action_state=${{vars.ISPRE}}" >> "$GITHUB_ENV"
              echo " isPro1 :${{env.ACTION_STATE}}"
              echo " isPro2 :${{vars.ACTION_STATE}}"
              echo "no!"
            fi
          else
            echo "$commitGit not found."
          fi
          
          beforeVersion='v'${Major^^}'.'${Minor^^}'.'${currentM^^}
          echo "salut " $beforeVersion
          echo ${committags[*]}

      - name: debug app
        run: flutter build apk --debug --split-per-abi
      - name: Push APK to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/debug/*.apk"
          tag: v1.0.${{github.run_number}}
          token: ${{ secrets.Token }}

  # 5
  build:
    # 6
    runs-on: ubuntu-latest

    # 7
    steps:
      # 8
      - uses: actions/checkout@v3

      - name: Run a one-line script
        run: echo "salut Arthur!"
